<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="admin">
	
	<select id="selectAdminLogin" parameterType="hashmap" resultType="adminVO">
		SELECT 
			admin_no as adminNo,
			admin_id as adminID,
			admin_pwd as adminPWD,
			admin_name as adminName,
			admin_email as adminEmail,
			admin_grade as adminGrade,
			admin_date as adminDate 
			FROM admin 
			WHERE (admin_id=#{adminID} AND admin_pwd=#{adminPWD} ) AND (NOT admin_grade='D')
	</select>
	
	<select id="selectAdminIDCheck" parameterType="string" resultType="string">
		SELECT
			admin_id as adminID
			FROM admin
			WHERE admin_id=#{chkID}	
	</select>	
	
	<insert id="insertAdminAccount" parameterType="adminVO">
		INSERT INTO admin VALUES (
			ADMINNO_SQ.NEXTVAL,
			#{adminID},
			#{adminPWD},
			#{adminName},
			#{adminEmail},
			DEFAULT,
			SYSDATE
		)
			
	</insert>
	
	<select id="selectAdminEmailCheck" parameterType="string" resultType="string">
		SELECT
			admin_email as adminEmail
			FROM admin
			WHERE admin_email=#{chkMail}	
	</select>
	
	<update id="updateAdminPWD" parameterType="map">
		UPDATE admin
		SET admin_pwd=#{newPWD}
		WHERE admin_id=#{adminID}
	</update>
	
	<update id="updateAdminAccount" parameterType="adminVO">
		UPDATE admin
		SET admin_name=#{adminName}, admin_email=#{adminEmail}
		WHERE admin_id=#{adminID}	
	</update>
	
	<select id="selectAdminAccount" parameterType="string" resultType="adminVO">
		SELECT 
			admin_no as adminNo,
			admin_id as adminID,
			admin_pwd as adminPWD,
			admin_name as adminName,
			admin_email as adminEmail,
			admin_grade as adminGrade,
			admin_date as adminDate 
		FROM admin 
		WHERE admin_id=#{adminID}
	</select>
	
	<select id="selectAdminList" resultType="adminVO">
		SELECT
			admin_no as adminNo,
			admin_id as adminID,
			admin_pwd as adminPWD,
			admin_name as adminName,
			admin_email as adminEmail,
			admin_grade as adminGrade,
			admin_date as adminDate 
		FROM admin
		WHERE NOT admin_grade='S'
	</select>
	
	<select id="selectAdminNew" resultType="int">
		SELECT
			COUNT (*)
		FROM admin
		WHERE admin_grade='C'	
	</select>

	<update id="updateAdminGrade" parameterType="map">
		UPDATE admin
		SET admin_grade=#{newGrade}			
		WHERE admin_no IN
		<foreach collection="adminNo" item="num" open="(" separator="," close=")">
			#{num}
		</foreach>	
	</update>
	
	<select id="selectAdminSearch" parameterType="map" resultType="adminVO">
		SELECT
			admin_no as adminNo,
			admin_id as adminID,
			admin_pwd as adminPWD,
			admin_name as adminName,
			admin_email as adminEmail,
			admin_grade as adminGrade,
			admin_date as adminDate 
		FROM admin
		WHERE
		<choose>
			<when test="tag.equals('adminID')">
				admin_id LIKE '%' || #{keyword} || '%'
			</when>
			
			<when test="tag.equals('adminName')">
				admin_name LIKE '%' || #{keyword} || '%'
			</when>
			
			<otherwise>
				(admin_id LIKE '%' || #{keyword} || '%') OR (admin_name LIKE '%' || #{keyword} || '%')
			</otherwise>
		</choose>
	</select>
	
		
		<select id="selectMemberList" parameterType="map" resultType="member">
		 SELECT
		 	   member_no AS memberNo,
			   member_id AS memberId,
			   member_pwd AS memberPwd,
			   auth_provider AS authProvider,
			   nickname AS nickname,
			   gender AS gender,
			   birthdate AS birthdate,
			   email AS email,
			   address AS address,
			   address_detail AS addressDetail,
			   enroll_date AS enrollDate,
			   member_status AS memberStatus,
			   dog_yn AS dogYN,
			   member_profile AS memberProfile
 		 FROM (SELECT ROW_NUMBER() OVER(ORDER BY member_no ASC) AS num, member.* FROM member)
		 WHERE num BETWEEN #{first} AND #{last}
	</select>
	
	<select id="selectMemberCount" resultType="int">
		 SELECT 
		 	COUNT(*)
		 FROM member		 
	</select>
	
	<update id="updateMemberStatus" parameterType="map">
		UPDATE member
		SET member_status=#{status}			
		WHERE member_no IN
		<foreach collection="memberNo" item="num" open="(" separator="," close=")">
			#{num}
		</foreach>
	</update>
	
</mapper>
